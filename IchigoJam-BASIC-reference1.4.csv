rdf:type,schema:identifier,schema:name,https://sabae.cc/#format,schema:name@ja-Kana,schema:description@ja,https://sabae.cc/#example,
schema:DefiedTerm,1,LED,LED 数,エルイーディー,数が1なら光り、0なら消える,LED 1,
schema:DefiedTerm,2,WAIT,"WAIT 数1{,数2}",ウェイト,数1の数値フレーム分待つ 60で約１秒、省略可の数2指定で低電力化、数1のマイナス指定で走査線分で待つ(-261でWAIT1と同等),WAIT 60,
schema:DefiedTerm,3,:,:,コロン,コマンドを連結する,WAIT 60:LED 1,
schema:DefiedTerm,4,1,行番号 {コマンド},,1. 数は-32768から32767まで表記できる。 2. 行頭の1〜32767で指定された数は行番号として、コマンドと合わせて記録する。コマンドを省略するとその行を削除（16385以上は指定しないと表示しない）,10 LED1,
schema:DefiedTerm,5,RUN,RUN,ラン,プログラムを実行する [F5],RUN,
schema:DefiedTerm,6,LIST,"LIST {行番号1{,行番号2}}",リスト,プログラムを表示する [F4] （行番号1で1行表示、行番号1がマイナスでその行まで表示、行番号2指定でその行まで表示、行番号2が0の時終わりまで表示、ESCで途中停止）,"LIST 10,300",
schema:DefiedTerm,7,GOTO,GOTO 行番号,ゴートゥー,指定した行番号へ飛ぶ（式も指定可能）,GOTO 10,
schema:DefiedTerm,8,END,END,エンド,プログラムを終了する,END,
schema:DefiedTerm,9,IF,IF 数 {THEN} コマンド1 {ELSE コマンド2},イフ,"数が0でなければコマンド1を実行し、0であればコマンド2を実行する （THEN,ELSE以降は省略可）",IF BTN() END,
schema:DefiedTerm,10,THEN,IF 数 {THEN} コマンド1 {ELSE コマンド2},ゼン,"数が0でなければコマンド1を実行し、0であればコマンド2を実行する （THEN,ELSE以降は省略可）",IF BTN() END,
schema:DefiedTerm,11,ELSE,IF 数 {THEN} コマンド1 ELSE コマンド2,エルス,数が0でなければコマンド1を実行し、0であればコマンド2を実行する （THENは省略可）,IF BTN() END ELSE CONT,
schema:DefiedTerm,12,BTN,BTN({数}),ボタン,ボタンが押されていれば1、そうでないとき0を返す（数：0(付属ボタン)/UP/DOWN/RIGHT/LEFT/SPACE、省略で0）,LED BTN(),
schema:DefiedTerm,13,NEW,NEW,ニュー,プログラムを全部消す,NEW,
schema:DefiedTerm,14,PRINT,PRINT {数や文字列},プリント,"数や文字列を表示する （文字列は""で囲む、"";"" で連結できる） 省略形：?","PRINT ""HI!"";15",
schema:DefiedTerm,15,?,? {数や文字列},プリント,"数や文字列を表示する （文字列は""で囲む、"";"" で連結できる） 非省略形：PRINT","?""HI!"";15",
schema:DefiedTerm,16,LOCATE,"LOCATE 数1,数2{,数3}",ロケート,"次に文字を書く位置を横、縦の順に指定する（左上が0,0、縦=-1で無表示）。数3が0でなければ指定した場所にカーソルを表示する。 省略形：LC","LOCATE 3,3",
schema:DefiedTerm,17,LC,"LC 数1,数2{,数3}",ロケート,"次に文字を書く位置を横、縦の順に指定する（左上が0,0、縦=-1で無表示）。数3が0でなければ指定した場所にカーソルを表示する。 非省略形：LOCATE","LC 3,3",
schema:DefiedTerm,18,CLS,CLS,クリア スクリーン,画面を全部消す,CLS,
schema:DefiedTerm,19,RND,RND(数),ランダム,0から数未満のでたらめな整数を返す,PRINT RND(6),
schema:DefiedTerm,20,SAVE,SAVE {数},セーブ,プログラムを保存する（0〜3の4つ、100-227 外付けEEPROM、省略で前回使用した数） ボタンを押した状態で起動すると0番を読み込み自動実行,SAVE 1,
schema:DefiedTerm,21,LOAD,LOAD {数},ロード,プログラムを読み出す（0〜3の4つ、100-227 外付けEEPROM、省略で前回使用した数）,LOAD,
schema:DefiedTerm,22,FILES,"FILES {数1{,数2}}",ファイルズ,数1(省略可)〜数2のプログラム一覧を表示する（EEPROM内ファイル表示に対応、0指定ですべて表示、ESCで途中停止）,FILES,
schema:DefiedTerm,23,BEEP,"BEEP {数1{,数2}}",ビープ,単音を鳴らす 周期(0-32767)と長さ(1/60秒単位)は省略可 ※SOUND(EX2)-GNDに圧電サウンダーなどの接続が必要,BEEP,
schema:DefiedTerm,24,PLAY,"PLAY {""MML""}",プレイ,別途解説するMMLで記述した音楽を鳴らす。MML省略で音停止 ※SOUND(EX2)-GNDに圧電サウンダーなどの接続が必要,"PLAY ""$CDE2CDE2""",
schema:DefiedTerm,25,TEMPO,TEMPO 数,テンポ,再生中の音楽のテンポを変更する,TEMPO 1200,
schema:DefiedTerm,26,+,数 + 数,プラス,足し算する,PRINT 1+1,
schema:DefiedTerm,27,-,数 - 数,マイナス,1. 引き算する 2. 後に続く数をマイナスにする,PRINT 2-1,
schema:DefiedTerm,28,*,数 * 数,アスタリスク,掛け算する,PRINT 7*8,
schema:DefiedTerm,29,/,数 / 数,スラッシュ,割り算する（小数点以下は切り捨て）,PRINT 9/3,
schema:DefiedTerm,30,%,数 % 数,パーセント,割り算した余りを返す,PRINT 10%3,
schema:DefiedTerm,31,(),(式),ブラケット,カッコ内の式を優先して計算する,PRINT 1+(1*2),
schema:DefiedTerm,32,LET,"LET 変数,数",レット,"数をアルファベット１文字の変数や配列の値として記憶する（配列へ連続代入可能 LET[0],1,2） 省略形：変数=数","LET A,1",
schema:DefiedTerm,33,=,変数=数,イコール,"1. 数をアルファベット１文字の変数や配列の値として記憶する  非省略形：LET 変数,数 2. 式として使うと==と同じ機能となる",A=1,
schema:DefiedTerm,34,INPUT,"INPUT {文字列,}変数",インプット,キーボードやUARTからの入力で数値を変数にいれる（文字列とコンマは省略可）,"INPUT ""ANS?"",A",
schema:DefiedTerm,35,TICK,TICK(),ティック,CLTからの時間を返す（1/60秒で1進む）,PRINT TICK(),
schema:DefiedTerm,36,CLT,CLT,クリア ティック,TICK()のカウントをリセットする,CLT,
schema:DefiedTerm,37,INKEY,INKEY(),インキー,キーボードやUARTから１文字入力する（入力がない時は0、UARTから0が入力された時は#100）,PRINT INKEY(),
schema:DefiedTerm,38,LEFT,LEFT,レフト,28を返す。INKEYのキーコードの判定や、SCROLLに使う,IF INKEY()=LEFT LED1,
schema:DefiedTerm,39,RIGHT,RIGHT,ライト,29を返す。INKEYのキーコードの判定や、SCROLLに使う,IF INKEY()=RIGHT LED1,
schema:DefiedTerm,40,UP,UP,アップ,30を返す。INKEYのキーコードの判定や、SCROLLに使う,IF INKEY()=UP LED1,
schema:DefiedTerm,41,DOWN,DOWN,ダウン,31を返す。INKEYのキーコードの判定や、SCROLLに使う,IF INKEY()=DOWN LED1,
schema:DefiedTerm,42,SPACE,SPACE,スペース,32を返す。INKEYのキーコードの判定や、SCROLLに使う,IF INKEY()=SPACE LED1,
schema:DefiedTerm,43,CHR,"CHR$(数{,数2{,数3…}})",キャラ,文字コードに対応する文字を返す（コンマ区切りで連続表記可）,PRINT CHR$(65),
schema:DefiedTerm,44,ASC,"ASC(""文字"")",アスキー,文字に対する文字コードを返す,"PRINT ASC(""A"")",
schema:DefiedTerm,45,SCROLL,SCROLL 数,スクロール,指定した方向に1キャラ分スクロールする（0/UP:上、1/RIGHT:右、2/DOWN:下、3/LEFT:左）,SCROLL 2,
schema:DefiedTerm,46,SCR,"SCR({数,数})",スクリーン,画面上の指定した位置に書かれた文字コードを返す（指定なしで現在位置） 別名：VPEEK,"PRINT SCR(0,0)",
schema:DefiedTerm,47,VPEEK,"VPEEK({数,数})",ブイピーク,画面上の指定した位置に書かれた文字コードを返す（指定なしで現在位置） 別名：SCR,"PRINT VPEEK(0,0)",
schema:DefiedTerm,48,==,数 == 数,イコール・イコール,比較して等しい時に1、それ以外で0を返す。別名：=,IF A==B LED 1,
schema:DefiedTerm,49,!=,数 != 数,ノット・イコール・トゥー,比較して等しくない時に1、それ以外で0を返す (!=でも可),IF A<>B LED 1,
schema:DefiedTerm,50,<>,数 <> 数,レス・アンド・グレーター・ザン,比較して等しくない時に1、それ以外で0を返す (!=でも可),IF A<>B LED 1,
schema:DefiedTerm,51,<=,数 <= 数,レス・ザン・オア・イコール・トゥー,比較して以下の時に1、それ以外で0を返す,IF A<=B LED 1,
schema:DefiedTerm,52,<,数 < 数,レス・ザン,比較して未満の時に1、それ以外で0を返す,IF A<B LED 1,
schema:DefiedTerm,53,>=,数 >= 数,グレーター・ザン・オア・イコール・トゥー,比較して以上の時に1、それ以外で0を返す,IF A>=B LED 1,
schema:DefiedTerm,54,>,数 > 数,グレーター・ザン,比較してより大きい時に1、それ以外で0を返す,IF A>B LED 1,
schema:DefiedTerm,55,AND,式 AND 式,アンド,どちらの式も1の時に1、それ以外で0を返す (&&でも可),IF A=1 AND B=1 LED 1,
schema:DefiedTerm,56,&&,式 && 式,アンド,どちらの式も1の時に1、それ以外で0を返す (ANDでも可),IF A=1 && B=1 LED 1,
schema:DefiedTerm,57,OR,式 OR 式,オア,どちらかの式が1の時に1、それ以外で0を返す (||でも可),IF A=1 OR B=1 LED 1,
schema:DefiedTerm,58,||,式 || 式,オア,どちらかの式が1の時に1、それ以外で0を返す (ORでも可),IF A=1 || B=1 LED 1,
schema:DefiedTerm,59,NOT,NOT 式,ノット・イコール・トゥー,式が0の時に1、それ以外で0を返す (!でも可),IF NOT A=1 LED 1,
schema:DefiedTerm,60,REM,REM,リマーク,これ以降のコマンドを実行しない（コメント機能） 省略形：',REM START,
schema:DefiedTerm,61,',',シングルクォート,これ以降のコマンドを実行しない（コメント機能） 非省略形：REM, START,
schema:DefiedTerm,62,FOR,FOR 変数=数1 TO 数2 {STEP 数3}:コマンド:NEXT,フォー,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEPは省略可、6段まで）,FOR I=0 TO 10:?I:NEXT,
schema:DefiedTerm,63,TO,FOR 変数=数1 TO 数2 {STEP 数3}:コマンド:NEXT,トゥー,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEP省略時は数3は1、6段まで）,FOR I=0 TO 10:?I:NEXT,
schema:DefiedTerm,64,STEP,FOR 変数=数1 TO 数2 STEP 数3:コマンド:NEXT,ステップ,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEPは省略可、6段まで）,FOR I=0 TO 10:?I:NEXT,
schema:DefiedTerm,65,NEXT,FOR 変数=数1 TO 数2 {STEP 数3}:コマンド:NEXT,ネクスト,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEPは省略可、6段まで）,FOR I=0 TO 10:?I:NEXT,
schema:DefiedTerm,66,POS,POS({数}),ポジション,カーソル位置を返す（0:X+Y*幅、1:X座標、2:Y座標）,"?POS(0),POS(1)",
schema:DefiedTerm,67,DRAW,"DRAW 数1,数2{,数3,数4,}{数5}",ドロー,"数1,数2の座標から数3,数4の座標へ線を引く（座標は最大63x47）、数5に0指定で線を消し、2指定で反転する、省略時と1指定で線を引く",,
schema:DefiedTerm,68,POINT,"POINT(数1,数2)",ポイント,"数1,数2の座標にDRAWで描かれた点または文字があるときに1、そうでないとき0を返す","?POINT(1,5)",
schema:DefiedTerm,69,OUT,"OUT 数1{,数2}",アウト,外部出力OUT1-11に0または1を出力する 数2を省略でまとめて出力できる（数2に-1指定でINへ切り替え、-2指定でプルアップ付きINへ切り替え ※IN3は除く）,"OUT 1,1",
schema:DefiedTerm,70,IN,IN({数}),イン,"IN0-10から入力する（0または1） 数を省略してまとめて入力できる （IN0,1,4,9はプルアップ、IN5-8,10-11はOUTで切り替え時使用可能、IN0,9はボタン）","LET A,IN(1)",
schema:DefiedTerm,71,ANA,ANA({数}),アナログ,"外部入力の電圧(0V-3.3V)を0-1023の数値で返す(2:IN2、5-8:IN5-8(OUT1-4)、0,9:BTN、省略で0)",?ANA(),
schema:DefiedTerm,72,PWM,"PWM 数1,数2{,数3}",ピー・ダブリュー・エム,外部出力OUT2-5に数2で0.01msec単位で指定するパルスを出力する（0-2000、周期20msec）、数3で周期を指定（省略時2000=20msec、マイナス値指定で周期1/480）,"PWM 2,100",
schema:DefiedTerm,73,CLV,CLV / クリア バリアブル,クリア ・バリアブル,変数、配列を全部0にする 別名：CLEAR,CLV,
schema:DefiedTerm,74,CLK,CLK / クリア キー,クリア・キー,キーバッファとキーの状態をクリアする,CLK,
schema:DefiedTerm,75,CLO,CLO / クリア アウトプット,クリア・ アウトプット,入出力ピンを初期状態に戻す,CLO,
schema:DefiedTerm,76,ABS,ABS(数) / アブソリュート,アブソリュート,絶対値を返す（マイナスはプラスになる）,?ABS(-2),
schema:DefiedTerm,77,[],[数],アレイ,"配列（[0]から[101]までの102コの連続した変数として使える） LET[0],1,2,3で連続代入可能",[3]=1,
schema:DefiedTerm,78,GOSUB,GOSUB 行番号,ゴーサブ,戻り先をスタックに積み、数または式で指定した行番号に飛ぶ（ネストは30段まで）省略形:GSB,GOSUB 100,
schema:DefiedTerm,79,GSB,GSB 行番号,ゴーサブ,戻り先をスタックに積み、数または式で指定した行番号に飛ぶ（ネストは30段まで）非省略形:GOSUB ,GSB 100,
schema:DefiedTerm,80,RETURN,RETURN,リターン,GOSUB/GSBの呼び出し元へ戻る,RETURN,
schema:DefiedTerm,81,RTN,RTN,リターン,GOSUB/GSBの呼び出し元へ戻る,RTN,
schema:DefiedTerm,82,DEC,"DEC$(数{,数})",デシ,数を文字列にする（２番目の数は桁数、省略可）,"?DEC$(99,3)",
schema:DefiedTerm,83,#,#16進数,ハッシュ,16進数で数を表記する,#FF,
schema:DefiedTerm,84,HEX,"HEX$(数{,数}) / ヘックス",ヘックス,数を16進数の文字列にする（２番目の数は桁数、省略可）,"?HEX$(255,2)",
schema:DefiedTerm,85,`,`2進数,バック・クォート,2進数で数を表記する,`1010,
schema:DefiedTerm,86,BIN,"BIN$(数{,数}) / バイナリー",バイナリー,数を2進数の文字列にする（２番目の数は桁数、省略可）,"?BIN$(255,8)",
schema:DefiedTerm,87,&,数 & 数,アンパサンド,論理積（ビット演算）,?3&1,
schema:DefiedTerm,88,|,数 | 数,パイプ,論理和（ビット演算）,?3|1,
schema:DefiedTerm,89,^,数 ^ 数,ハット,排他的論理和（ビット演算）,?A^1,
schema:DefiedTerm,90,>>,数 >> 数,シフト・ライト,右シフトする（ビット演算）,?A>>1,
schema:DefiedTerm,91,<<,数 << 数,シフト・レフト,左シフトする（ビット演算）,?A<<1,
schema:DefiedTerm,92,~,~数,チルダ,ビット反転（ビット演算）,?~A,
schema:DefiedTerm,93,COS,COS(数),コサイン,指定された数を角度の度数としてコサインの値の256倍を返す,?COS(90),
schema:DefiedTerm,94,SIN,SIN(数),サイン,指定された数を角度の度数としてサインの値の256倍を返す,?SIN(90),
schema:DefiedTerm,95,STOP,STOP,ストップ,プログラムを中断する,STOP,
schema:DefiedTerm,96,CONT,CONT,コンティニュー,実行中の行や、中断した行を再度実行する,CONT,
schema:DefiedTerm,97,SOUND,SOUND(),サウンド,音が再生中なら1、そうで無いとき0をを返す,?SOUND(),
schema:DefiedTerm,98,FREE,FREE(),フリー,プログラムの残りメモリ数を返す,?FREE(),
schema:DefiedTerm,99,VER,VER(),バージョン,IchigoJam BASICのバージョン番号を返す,?VER(),
schema:DefiedTerm,100,LANG,LANG(),ランゲージ,"IchigoJam BASICの言語番号を返す (1:日本語, 2:モンゴル語, 3:ベトナム語)",?LANG(),
schema:DefiedTerm,101,RENUM,"RENUM {数1{,数2}}",リナンバー,プログラムの行番号を数1(省略時は10)から数2(省略時は10)刻みにする。GOTO/GOSUBの飛び先は手で変更必要な場合がある,RENUM,
schema:DefiedTerm,102,LRUN,LRUN {数},ロードラン,プログラムを読み込み後、実行する,LRUN 1,
schema:DefiedTerm,103,FILE,FILE(),ファイル,最後にプログラムを読み込み、書き込み行った数を返す,?FILE(),
schema:DefiedTerm,104,LINE,LINE(),ライン,現在実行中の行番号を返す（非実行時は0）,?LINE(),
schema:DefiedTerm,105,SRND,SRND 数,エス・ランド,種を指定して乱数を初期化する,SRND 0,
schema:DefiedTerm,106,HELP,HELP,ヘルプ,メモリマップを表示する,HELP,
schema:DefiedTerm,107,PEEK,PEEK(数),ピーク,メモリ読み出し（キャラクターパターン0-#7FFなど）,?PEEK(#700),
schema:DefiedTerm,108,POKE,"POKE 数,数",ポーク,"メモリへの書き込み（連続書き込み可能 POKE#700,1,2,3）","POKE #700,#FF",
schema:DefiedTerm,109,COPY,"COPY 数1,数2,数3",コピー,メモリコピー 数1のアドレスへ数2のアドレスから数3の長さ分コピー(数3マイナスでコピー方向が逆になる),"COPY #900,0,256",
schema:DefiedTerm,110,CLP,CLP,クリア・ パターン,キャラクターパターン(#700-#7FF)を初期化する,CLP,
schema:DefiedTerm,111,"""","""文字列""",ダブルクォート,文字列の先頭アドレスを返す,"A=""ABC""",
schema:DefiedTerm,112,STR,"STR$(数1{,数2})",ストリング,文字列を返す（数2(省略可)で長さ指定）,PRINT STR$(A),
schema:DefiedTerm,113,LEN,"LEN(""文字列"")",レングス,文字列の長さを返す,"PRINT LEN(""ABC"")",
schema:DefiedTerm,114,@,@ラベル,アットマーク,行の先頭に書くとラベルとなり、行番号の代わりとして使える（GOTO @LOOPなど） ※前方一致,@LOOP,
schema:DefiedTerm,115,VIDEO,"VIDEO 数1{,数2}",ビデオ,画面表示非表示を切り替える 0で画面表示を停止し処理高速化 （F8で表示）、省略可能な数2でVIDEO0時CPUクロックを1/数2に変更し省電力化、数1が2の倍数で白黒反転、数1が3以上で拡大モード,VIDEO 0,
schema:DefiedTerm,116,RESET,RESET,リセット,IchigoJamをリセットする,RESET,
schema:DefiedTerm,117,SLEEP,SLEEP,スリープ,プログラムを休止する (ボタンを押すと起動し、LRUN0を実行する),SLEEP,
schema:DefiedTerm,118,UART,"UART 数1{,数2}",ユーアート,数1：シリアル出力設定（0:オフ、1:PRINTのみ、2:PRINT/LC/CLS/SCROLL、3:PRINTのみ/改行コード\r\n、左記に+4で入力エコーバック、初期値:2）、数2：シリアル受信設定（0:オフ、1:オン 省略時）,UART 0,
schema:DefiedTerm,119,BPS,"BPS 数1{,数2}",ビー・ピー・エス,"シリアル通信速度を変更する(0で初期値の115,200bps、-1:57600bps、-2:38400bps、-100以下指定で指定した数の-100倍bpsに指定、-2304:230400bps)。数2でI2Cの通信速度設定（単位kHz、0:デフォルト400kHz)",BPS 9600,
schema:DefiedTerm,121,OK,OK {数},オーケー,OKやエラーメッセージの表示有無を切り替える（数、1:表示、2:非表示、省略で1）,OK 2,
schema:DefiedTerm,120,I2CR,"I2CR(数1,数2,数3,数4,数5)",アイ・ツー・シー・リード,I2Cで周辺機器から読み込む I2Cアドレス、コマンド送信アドレス・長さ、受信アドレスと長さ（コマンド送信が1byteの時数3を省略可、コマンド送信が0byteの時数2/数3を省略可）,"R=I2CR(#50,#114A,2,#114C,2)",
schema:DefiedTerm,121,I2CW,"I2CW(数1,数2,数3,数4,数5)",アイ・ツー・シー・ライト,I2Cで周辺機器に書き込む I2Cアドレス、コマンド送信アドレス・長さ、送信アドレスと長さ（数4/数5は省略可、コマンド送信が1byteの時数3を省略可）,"R=I2CW(#50,#114A,2,#114C,2)",
schema:DefiedTerm,122,IOT.IN,IoT.IN(),アイ・オー・ティー・イン,sakura.ioモジュールから受信した数を一つ読み込む,R=IoT.IN(),
schema:DefiedTerm,123,IOT.OUT,IoT.OUT 数,アイ・オー・ティー・アウト,sakura.ioモジュールへ数をチャンネル0で即時送信する,IoT.OUT 100,
schema:DefiedTerm,124,WS.LED,"WS.LED 数1{,数2}",ダブリュー・エス・エル・イー・ディー,配列の先頭から緑赤青の順に設定された値でOUT1に接続されたWS2812Bを数1の分光らせる。数2を指定するとその数だけ繰り返す。,WS.LED 3,
schema:DefiedTerm,125,SWITCH,"SWITCH {数1{,数2}}",スイッチ,画面表示をテレビと液晶とを切り替える（数1 0:テレビ、1:液晶）、数2で液晶の濃さを指定,SWITCH,
schema:DefiedTerm,126,USR,"USR(数1{,数2})",ユーザー,数1で指定されたアドレスのマシン語を数2をパラメータとして呼び出す（数2省略で0）,"A=USR(#700,0)",